name: Docker publish workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types:
      - created

jobs:
  build-container:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get latest commit hash
        id: fetch-latest-hash
        run: echo "::set-output name=latest-hash::$(git rev-parse --short $GITHUB_SHA)"

      - name: Fetch latest release version
        id: fetch-latest-release
        uses: reloc8/action-latest-release-version@1.0.0

      - name: Lowercase repo name
        id: repo-name
        run: echo "::set-output name=lowercase-name::$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')"

      - name: Get container tags
        id: container-tags
        run: |
          if [ ${{ github.event_name }} == "release" ]
          then
            echo "::set-output name=tags::ghcr.io/${{ steps.repo-name.outputs.lowercase-name }}:stable,ghcr.io/${{ steps.repo-name.outputs.lowercase-name }}:${{ steps.fetch-latest-release.outputs.latest-release }}"
          else
            echo "::set-output name=tags::ghcr.io/${{ steps.repo-name.outputs.lowercase-name }}:latest,ghcr.io/${{ steps.repo-name.outputs.lowercase-name }}:${{ steps.fetch-latest-hash.outputs.latest-hash }}"
          fi
      - name: Build and push
        id: docker-build
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: Dockerfile
          target: app
          push: true
          tags: ${{ steps.container-tags.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-container:
    runs-on: ubuntu-latest
    needs: build-container
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get latest commit hash
        id: fetch-latest-hash
        run: echo "::set-output name=latest-hash::$(git rev-parse --short $GITHUB_SHA)"

      - name: Fetch latest release version
        id: fetch-latest-release
        uses: reloc8/action-latest-release-version@1.0.0

      - name: Lowercase repo name
        id: repo-name
        run: echo "::set-output name=lowercase-name::$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')"

      - name: Deploy stack to Portainer
        uses: DaniFoldi/portainer-stack-deploy@v1.3.1
        with:
          portainer-host: ${{ secrets.PORTAINER_HOST }}
          username: ci
          password: ${{ secrets.PORTAINER_KEY }}
          endpoint-id: 2
          stack-name: gh-milestone
          stack-definition: docker-compose.yml
          variables: '{"stable": "${{ steps.fetch-latest-release.outputs.latest-release }}", "beta": "${{ steps.fetch-latest-hash.outputs.latest-hash }}"}'
